name: pa-frontend pipeline
on:
  push:
    branches:
      - develop
env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
  AWS_EC2_USER: ${{ secrets.AWS_EC2_USER }}
  AWS_EC2_IP: ${{ secrets.AWS_EC2_IP }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          dockerfile: ./Dockerfile
          tags: devrssl/pa-frontend:latest
            

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      - name: Set permissions for private key
        run: |
          echo "${{ env.AWS_SECRET_KEY }}" > key.pem
          chmod 600 key.pem
      
      - name: Create .env file
        run: |
             echo "NEXT_PUBLIC_APP_ENV=${{ secrets.NEXT_PUBLIC_APP_ENV}}" >> .env && \
             echo "NEXT_PUBLIC_BASE_LOCAL=${{ secrets.NEXT_PUBLIC_BASE_LOCAL}}" >> .env && \
             echo "NEXT_PUBLIC_BASE_STAGING=${{ secrets.NEXT_PUBLIC_BASE_STAGING}}" >> .env && \
             echo "NEXT_PUBLIC_PUBLIC_KEY=${{ secrets.NEXT_PUBLIC_PUBLIC_KEY}}" >> .env && \
             echo "NEXT_PUBLIC_PRIVATE_KEY=${{ secrets.NEXT_PUBLIC_PRIVATE_KEY}}" >> .env && \
             echo "OKTA_CLIENTID=${{ secrets.OKTA_CLIENTID}}" >> .env && \
             echo "OKTA_CLIENTSECRET=${{ secrets.OKTA_CLIENTSECRET}}" >> .env && \
             echo "OKTA_DOMAIN=${{ secrets.OKTA_DOMAIN}}" >> .env && \
             echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL}}" >> .env && \
             echo "NEXT_PUBLIC_REDIRECT=${{ secrets.NEXT_PUBLIC_REDIRECT}}" >> .env
        
      - name: Pull Docker image
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.AWS_EC2_USER }}@${{ env.AWS_EC2_IP }} 'sudo docker pull devrssl/pa-frontend:latest'

      - name: Stop running container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.AWS_EC2_USER }}@${{ env.AWS_EC2_IP }} 'sudo docker stop pa-frontend || true'
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.AWS_EC2_USER }}@${{ env.AWS_EC2_IP }} 'sudo docker rm pa-frontend || true'

      - name: Run new container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.AWS_EC2_USER }}@${{ env.AWS_EC2_IP }} 'sudo docker run --env-file .env -p 3000:3000 -d devrssl/pa-frontend:latest'
